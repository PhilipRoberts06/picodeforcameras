from flask import Flask, request, jsonify
from OpenSSL import SSL
import requests

app = Flask(__name__)

# Example: Route to forward requests to the local server
@app.route('/api/<path:path>', methods=['GET', 'POST'])
def forward_request(path):
    local_server_url = f"http://127.0.0.1:8000/{path}"  # Local server URL
    headers = {key: value for key, value in request.headers}

    if request.method == 'GET':
        response = requests.get(local_server_url, headers=headers, params=request.args)
    else:
        response = requests.post(local_server_url, headers=headers, json=request.get_json())

    return jsonify(response.json()), response.status_code

# Health-check endpoint
@app.route('/health', methods=['GET'])
def health():
    return jsonify({"status": "running"}), 200

if __name__ == '__main__':
    # Specify certificate and key files for HTTPS
    context = SSL.Context(SSL.SSLv23_METHOD)
    context.use_privatekey_file('private.key')  # Private key file
    context.use_certificate_file('certificate.crt')  # Certificate file

    app.run(host='0.0.0.0', port=443, ssl_context=context)
