python3 --version

python3 -m venv flask_env

source flask_env/bin/activate

pip install flask

pip install requests

source flask_env/bin/activate

mkdir ~/ssl_cert

cd ~/ssl_cert

openssl req -x509 -nodes -days 365000 -newkey rsa:2048 -keyout privkey.pem -out cert.pem
(US)(State)(City)

from flask import Flask, send_file, request, abort
import requests
import io
import hashlib

app = Flask(__name__)

# Simulate a secure backend for storing user feed mappings
# Key = Hashed auth_key | Value = Feed URL
USER_FEEDS = {
    hashlib.sha256("client_key_12345".encode()).hexdigest(): "http://aveiashq.mycrestron.com:22226/snap.jpeg"
}

def get_feed_url(auth_key):
    """Validate the provided auth_key and return the associated feed URL."""
    # Hash the incoming key to match the stored hashes
    hashed_key = hashlib.sha256(auth_key.encode()).hexdigest()

    # Lookup the hashed key in the USER_FEEDS dictionary
    return USER_FEEDS.get(hashed_key)

@app.route('/snap.jpeg', methods=['GET'])
def get_image():
    # Get the 'auth_key' parameter from the request
    auth_key = request.args.get('auth_key')

    if not auth_key:
        abort(403)  # Forbidden: Missing key

    # Get the feed URL for the given key
    feed_url = get_feed_url(auth_key)

    if not feed_url:
        abort(403)  # Forbidden: Invalid key

    try:
        # Fetch the latest image from the client's specific feed
        response = requests.get(feed_url, stream=True)
        response.raise_for_status()

        # Stream the image to the client without saving it
        return send_file(
            io.BytesIO(response.content),
            mimetype='image/jpeg',
            as_attachment=False
        )
    except requests.exceptions.RequestException as e:
        return f"Error fetching image: {e}", 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, ssl_context=(
        "./ssl_cert/cert.pem",  # Path to your self-signed certificate
        "./ssl_cert/privkey.pem"  # Path to your private key
    ))

unique_key_12345,http://127.0.0.1:8081/snap.jpeg
client_key_67890,http://127.0.0.1:8082/snap.jpeg
another_key_54321,http://127.0.0.1:8083/snap.jpeg
